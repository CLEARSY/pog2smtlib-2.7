<?xml version="1.0" encoding="UTF-8"?>
<Proof_Obligations xmlns="https://www.atelierb.eu/Formats/pog" version="1.0">
    <Define name="B definitions" hash="7128875304803749033">
        <Exp_Comparison op="=">
            <Id value="NAT" typref="0"/>
            <Binary_Exp op=".." typref="0">
                <Integer_Literal value="0" typref="1"/>
                <Id value="MAXINT" typref="1"/>
            </Binary_Exp>
        </Exp_Comparison>
        <Exp_Comparison op="=">
            <Id value="INT" typref="0"/>
            <Binary_Exp op=".." typref="0">
                <Id value="MININT" typref="1"/>
                <Id value="MAXINT" typref="1"/>
            </Binary_Exp>
        </Exp_Comparison>
    </Define>
    <Define name="ctx" hash="0"/>
    <Define name="seext" hash="0"/>
    <Define name="lprp" hash="0"/>
    <Define name="inprp" hash="0"/>
    <Define name="inext" hash="0"/>
    <Define name="inv" hash="0"/>
    <Define name="ass" hash="15977564511847941148">
        <Exp_Comparison op="=">
            <Quantified_Exp type="INTER" typref="0">
                <Variables>
                    <Id value="xx" typref="1"/>
                </Variables>
                <Pred>
                    <Exp_Comparison op=":">
                        <Id value="xx" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:2:1:1"/>
                        <Nary_Exp op="{" typref="0">
                            <Integer_Literal value="2" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:2:1:2:1"/>
                            <Integer_Literal value="4" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:2:1:2:2"/>
                        </Nary_Exp>
                    </Exp_Comparison>
                </Pred>
                <Body>
                    <Quantified_Set typref="0">
                        <Variables>
                            <Id value="zz" typref="1"/>
                        </Variables>
                        <Body>
                            <Nary_Pred op="&amp;">
                                <Exp_Comparison op=":">
                                    <Id value="zz" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:3:1:2:1:1:1"/>
                                    <Id value="INTEGER" typref="0" tag="quantified_inter_1.bxml:1:2:1:1:3:1:2:1:1:2"/>
                                </Exp_Comparison>
                                <Exp_Comparison op="&lt;=i">
                                    <Id value="zz" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:3:1:2:1:2:1"/>
                                    <Id value="xx" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:3:1:2:1:2:2"/>
                                </Exp_Comparison>
                            </Nary_Pred>
                        </Body>
                    </Quantified_Set>
                </Body>
            </Quantified_Exp>
            <Nary_Exp op="{" typref="0">
                <Integer_Literal value="0" typref="1" tag="quantified_inter_1.bxml:1:2:1:2:1"/>
                <Integer_Literal value="1" typref="1" tag="quantified_inter_1.bxml:1:2:1:2:2"/>
                <Integer_Literal value="2" typref="1" tag="quantified_inter_1.bxml:1:2:1:2:3"/>
                <Integer_Literal value="3" typref="1" tag="quantified_inter_1.bxml:1:2:1:2:4"/>
            </Nary_Exp>
        </Exp_Comparison>
    </Define>
    <Define name="cst" hash="0"/>
    <Define name="sets" hash="0"/>
    <Proof_Obligation goalHash="12766024345200200262">
        <Tag>AssertionLemmas</Tag>
        <Definition name="B definitions"/>
        <Definition name="ctx"/>
        <Definition name="cst"/>
        <Definition name="lprp"/>
        <Definition name="inprp"/>
        <Definition name="inext"/>
        <Definition name="seext"/>
        <Definition name="inv"/>
        <Simple_Goal>
            <Tag>Assertion is verified</Tag>
            <Goal>
                <Exp_Comparison op="=">
                    <Quantified_Exp type="INTER" typref="0">
                        <Variables>
                            <Id value="xx" typref="1"/>
                        </Variables>
                        <Pred>
                            <Exp_Comparison op=":">
                                <Id value="xx" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:2:1:1"/>
                                <Nary_Exp op="{" typref="0">
                                    <Integer_Literal value="2" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:2:1:2:1"/>
                                    <Integer_Literal value="4" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:2:1:2:2"/>
                                </Nary_Exp>
                            </Exp_Comparison>
                        </Pred>
                        <Body>
                            <Quantified_Set typref="0">
                                <Variables>
                                    <Id value="zz" typref="1"/>
                                </Variables>
                                <Body>
                                    <Nary_Pred op="&amp;">
                                        <Exp_Comparison op=":">
                                            <Id value="zz" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:3:1:2:1:1:1"/>
                                            <Id value="INTEGER" typref="0" tag="quantified_inter_1.bxml:1:2:1:1:3:1:2:1:1:2"/>
                                        </Exp_Comparison>
                                        <Exp_Comparison op="&lt;=i">
                                            <Id value="zz" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:3:1:2:1:2:1"/>
                                            <Id value="xx" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:3:1:2:1:2:2"/>
                                        </Exp_Comparison>
                                    </Nary_Pred>
                                </Body>
                            </Quantified_Set>
                        </Body>
                    </Quantified_Exp>
                    <Nary_Exp op="{" typref="0">
                        <Integer_Literal value="0" typref="1" tag="quantified_inter_1.bxml:1:2:1:2:1"/>
                        <Integer_Literal value="1" typref="1" tag="quantified_inter_1.bxml:1:2:1:2:2"/>
                        <Integer_Literal value="2" typref="1" tag="quantified_inter_1.bxml:1:2:1:2:3"/>
                        <Integer_Literal value="3" typref="1" tag="quantified_inter_1.bxml:1:2:1:2:4"/>
                    </Nary_Exp>
                </Exp_Comparison>
            </Goal>
        </Simple_Goal>
    </Proof_Obligation>
    <Proof_Obligation goalHash="15977564511847941144">
        <Tag>WellDefinednessAssertions</Tag>
        <Definition name="B definitions"/>
        <Definition name="ctx"/>
        <Definition name="cst"/>
        <Definition name="lprp"/>
        <Definition name="inprp"/>
        <Definition name="inext"/>
        <Definition name="seext"/>
        <Definition name="inv"/>
        <Simple_Goal>
            <Tag>Assertion is well defined</Tag>
            <Goal>
                <Unary_Pred op="not">
                    <Exp_Comparison op="=">
                        <Quantified_Set typref="1">
                            <Variables>
                                <Id value="xx" typref="1"/>
                            </Variables>
                            <Body>
                                <Exp_Comparison op=":">
                                    <Id value="xx" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:2:1:1"/>
                                    <Nary_Exp op="{" typref="0">
                                        <Integer_Literal value="2" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:2:1:2:1"/>
                                        <Integer_Literal value="4" typref="1" tag="quantified_inter_1.bxml:1:2:1:1:2:1:2:2"/>
                                    </Nary_Exp>
                                </Exp_Comparison>
                            </Body>
                        </Quantified_Set>
                        <EmptySet typref="1"/>
                    </Exp_Comparison>
                </Unary_Pred>
            </Goal>
        </Simple_Goal>
    </Proof_Obligation>
    <TypeInfos>
        <Type id="0">
            <Unary_Exp op="POW">
                <Id value="INTEGER"/>
            </Unary_Exp>
        </Type>
        <Type id="1">
            <Id value="INTEGER"/>
        </Type>
    </TypeInfos>
</Proof_Obligations>
